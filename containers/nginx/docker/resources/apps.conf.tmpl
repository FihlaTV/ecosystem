server {
  listen 443  ssl spdy;

  ssl_certificate /etc/ces/ssl/server.crt;
  ssl_certificate_key /etc/ces/ssl/server.key;

  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;

  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers  HIGH:!aNULL:!MD5;

  # default proxy settings
  proxy_set_header Host $http_host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Scheme $scheme;
  proxy_set_header X-Real-IP $remote_addr;
  # disable gzip encoding for proxy applications
  proxy_set_header Accept-Encoding identity;

  # warp, warp, warp
  set $warp '<script type="text/javascript" async="true">(function(){var s = document.createElement("script");s.type = "text/javascript";s.async = true;s.src = "/warp/warp.js";var x = document.getElementsByTagName("script")[0];x.parentNode.insertBefore(s, x);})();</script></body>';

  # apply warp menu only on GET requests
  if ($request_method != GET){
    set $warp '</body>';
  }

  # do not apply warp menu on ajax requests
  if ($http_x_requested_with ~ XMLHttpRequest) {
    set $warp '</body>';
  }

  sub_filter_types text/html;
  sub_filter '</body>' $warp;
  sub_filter_once on;

  # warp menu
  location /warp {
    root /var/www/html;
  }

  # services
{{range $topkey := lsdir "/services"}}{{$topdir := printf "/services/%s/*" $topkey}}{{range $dir := getvs $topdir}}{{$service := json $dir}}{{range $tag := $service.tags}}{{if eq $tag "webapp"}}
  location /{{$service.name}} {
    proxy_pass http://{{$service.service}};
  }
{{end}}{{end}}{{end}}{{end}}
  # end of services
}
